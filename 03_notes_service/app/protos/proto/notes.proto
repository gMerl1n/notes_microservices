syntax = "proto3";

package notes;


service Note {
    rpc CreateNote (CreateNoteRequest) returns (CreateNoteResponse);
    rpc GetNote (GetNoteRequest) returns (GetNoteResponse);
    rpc GetNotes (GetListNotesRequest) returns (GetListNotesResponse);
    rpc CreateCategory (CreateCategoryRequest) returns (CreateCategoryResponse);
    rpc GetNotesByCategory (GetNotesByCategoryRequest) returns (GetNotesByCategoryResponse);
    rpc UpdateNote (UpdateNoteRequest) returns (UpdateNoteResponse);
    rpc DeleteNote (DeleteNoteRequest) returns (DeleteNoteReponse);
}

// rpc CreateNote (CreateNoteRequest) returns (CreateNoteResponse);

message CreateNoteRequest {
    string user_uuid = 1; // user uuid
    optional string category_name = 2;
    string title = 3; // note title
    string body = 4; // note body
    optional bytes binary = 5; // optional file (image for example)
}

message CreateNoteResponse {
    string note_uuid = 1; // note id
}

// rpc GetNote (GetNoteRequest) returns (GetNoteResponse);

message GetNoteRequest {
    string user_uuid = 1; // user uuid
    string note_uuid = 2; // note id
}

message GetNoteResponse {
    string note_uuid = 1; // note id
    string title = 2; // note title
    string body = 3; // note body
    optional float update_at = 4; // if the note was updated     
    float created_at = 5; // time when the note was created
}

// rpc GetNotes (GetListNotesRequest) returns (GetListNotesResponse);

message GetListNotesRequest {
    string user_uuid = 1; // user uuid
}

message GetListNotesObject {
    string note_uuid = 1; // note id
    optional string category_name = 2;
    string title = 3; // note title
    string body = 4; // note body
    optional float update_at = 5; // if the note was updated     
    float created_at = 6; // time when the note was created
}

message GetListNotesResponse {
    repeated GetListNotesObject notes = 1;
}

// rpc CreateCategory (CreateCategoryRequest) returns (CreateCategoryResponse);

message CreateCategoryRequest {
    string user_uuid = 1; // user uuid
    string category_name = 2;
}

message CreateCategoryResponse {
    int64 category_id = 1;
}


// rpc GetNotesByCategory (GetNotesByCategoryRequest) returns (GetNotesByCategoryResponse);

message GetNotesByCategoryRequest {
    string user_uuid = 1;
    int64 category_id = 2;
}

message GetNotesByCategoryObject {
    string note_uuid = 1; // note id
    string category = 2;
    string title = 3; // note title
    string body = 4; // note body
    optional float update_at = 5; // if the note was updated     
    float created_at = 6; // time when the note was created
}

message GetNotesByCategoryResponse {
    optional int64 count_notes_by_cat = 1;
    repeated GetNotesByCategoryObject notes = 2;
}

// rpc UpdateNote (UpdateNoteRequest) returns (UpdateNoteResponse);

message UpdateNoteObject {
    string note_uuid = 1; // note id
    optional string category_name = 3;
    optional string title = 4; // note title
    optional string body = 5; // note body
}

message UpdateNoteRequest {
    string user_uuid = 1; // user uuid
    UpdateNoteObject note_to_update = 2;
}

message UpdateNoteResponse {
    string note_uuid = 1; // note id
}

// rpc DeleteNote (DeleteNoteRequest) returns (DeleteNoteReponse);

message DeleteNoteRequest {
    string user_uuid = 1; // user uuid
    string note_uuid = 2; // note id
}

message DeleteNoteReponse {
    string note_uuid = 1; // note id
}